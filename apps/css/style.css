.graph {
  width: 95%;
  height: 500px;
  margin-left: auto;
  margin-right: auto;
  margin-top: 20px;
}
.container {
  margin-top: 50px;
}

.solution {
  font-size: 2rem;
  font-weight: bold;
}

/* Add a black background color to the top navigation */
.topnav {
    background-color: #333;
    overflow: hidden;
}

/* Style the links inside the navigation bar */
.topnav a {
    float: left;
    display: block;
    color: #f2f2f2;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    font-size: 17px;
}

/* Change the color of links on hover */
.topnav a:hover {
    background-color: #ddd;
    color: black;
}

/* Add a color to the active/current link */
.topnav a.active {
    background-color: #4CAF50;
    color: white;
}

  // APP Start

    var app = new Vue({
      el: "#app",
      data: {
        title: "Student-t Distribution",
        znot: 2,
        zleft: -1,
        zright: 1,
        precision: 6
      },
      computed: {
        onesidenorm: function () {
          return jStat.normal.cdf(this.znot, 0, 1).toFixed(this.precision);
        },
        twosidenorm: function () {
          return (jStat.normal.cdf(this.zright, 0, 1) - jStat.normal.cdf(this.zleft, 0, 1)).toFixed(this.precision);
        },
        outsidenorm: function () {
          return (jStat.normal.cdf(this.zleft, 0, 1) + 1 - jStat.normal.cdf(this.zright, 0, 1)).toFixed(this.precision);
        }
      },
      methods: {
        updategraph1: function () {
          let p = jStat.studentt.inv(this.area, this.df);
          setExpress(p, 4);
        },
        updategraph2: function () {
          let p = jStat.studentt.inv(this.area2, this.df2);
          setExpress(p, -p);
        }
      }
    });

    //Graph start
    let x1b = -2;
    let x2b = 1.5;


    //bell
    var elt = document.getElementById('bell');

    var calculator123 = Desmos.Calculator(elt, {
      zoomButtons: false,
      expressions: true,
      settingsMenu: false,
      expressionsCollapsed: true,
      lockViewport: true,
      expressionsTopbar: true,
      solutions: true

    });


    function setExpress(x1b, x2b) {
      calculator123.setExpressions([
        //don't change the id, but change the latex formula
        {
          id: 'graph1',
          latex: 'f(x)=\\frac{1}{2\\pi} e^{(-{(x-a)^2}/{b})}'
        }, {
          id: 'slider1',
          latex: 'a=0',
          sliderBounds: {
            min: 0,
            max: 0,
            step: 1
          }
        }, {
          id: 'slider2',
          latex: 'b=1',
          sliderBounds: {
            min: .01,
            max: 10,
            step: .01
          }
        }, {
          id: 'graph4',
          latex: '0<y \\le f \\left( x \\right) \\left\\{x_1<x<x_2\\right\\}',
          color: '#8064A2'
        }, {
          id: 'graph5',
          latex: 'x=' + x2b + '\\left\\{0<y\\le f\\left(x\\right)\\right\\}',
          color: 'red'
        }, {
          id: 'graph6',
          latex: 'x=' + x1b + '\\left\\{0<y\\le f\\left(x\\right)\\right\\}',
          color: 'red'
        }, {
          id: 'slider3',
          latex: ('x_1=' + x1b),
          sliderBounds: {
            min: -6.5,
            max: 6.5,
            step: .01
          }
        }, {
          id: 'slider4',
          latex: 'x_2=' + x2b,
          sliderBounds: {
            min: -6.5,
            max: 6.5,
            step: .01
          }
        }

      ]);

    }
    calculator123.setMathBounds({
      //change below to change graph bounds
      left: -3,
      right: 3,
      bottom: -.05,
      top: 0.25
    });
    calculator123.setGraphSettings({
      //change values below to set axis scale or labels - set to 0 for auto
      xAxisLabel: '', //set this to 2 single quotes for nothing ''
      yAxisLabel: '',
      xAxisStep: '', // x axis count step
      yAxisStep: '',
      showGrid: false,
      projectorMode: true
    }); //end the graph items

    setExpress(-3, 3);

//graph end
